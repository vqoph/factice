#!/usr/bin/env node
const yargs = require('yargs');
const pkg = require('../package.json');
const server = require('../lib/server');
const logger = require('../lib/logger/logger');
const generatePostman = require('../lib/postman/collection');

const argv = yargs
  .config('config')
  .usage('$0 [options] <command> <source>')
  .options({
    port: {
      alias: 'p',
      description: 'Set port',
      default: 3000,
    },

    host: {
      alias: 'H',
      description: 'Set host',
      default: 'localhost',
    },

    watch: {
      alias: 'w',
      description: 'Watch source',
    },

    watchFiles: {
      description: 'specify file(s) to watch',
    },

    'no-cors': {
      alias: 'nc',
      description: 'Disable Cross-Origin Resource Sharing',
    },

    delay: {
      alias: 'd',
      description: 'Add delay to responses (ms)',
    },
  })
  .boolean('watch')
  .string('watchFiles')
  .boolean('no-cors')
  .help('help')
  .alias('help', 'h')
  .version(pkg.version)
  .alias('version', 'v')
  .example('$0 run db.json ', '')
  .require(2, 'Missing <command> or <source> argument').argv;

const {
  _: [command, source],
  ...cliArguments
} = argv;

switch (command) {
  case 'run':
    // Run server with supplied db path
    server({ source, ...cliArguments });
    break;

  case 'generate-postman-collection':
    // Generate a postman collection using path
    generatePostman({ source, ...cliArguments });
    break;

  default:
    logger.error(`Unrecognized command ${command}`, { scope: 'cli' });
    break;
}
